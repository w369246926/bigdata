在 Netty 框架中，这一系列的方法是 Netty 的事件处理模型中的一部分。它们会在不同的事件发生时被调用。以下是这些方法的调用时机：

1. **channelOpen**:
   - 调用时机：当新的 Channel 被创建并打开时。
   - 场景：在客户端与服务器端建立连接时。

2. **channelBound**:
   - 调用时机：当 Channel 已经绑定到本地地址并准备接受连接时。
   - 场景：在服务器端监听端口并准备接收连接时。

3. **channelConnected**:
   - 调用时机：当连接建立时。
   - 场景：在客户端与服务器端成功建立连接时。

4. **messageReceived**:
   - 调用时机：当有新的消息（数据）到达时。
   - 场景：在 Channel 中有数据可读时，通常在这个方法中进行业务逻辑处理。

5. **writeComplete**:
   - 调用时机：当消息写入完成时。
   - 场景：在数据写入 Channel 完成时触发。

6. **channelDisconnected**:
   - 调用时机：当连接断开时。
   - 场景：在客户端或服务器端的连接断开时。

7. **channelUnbound**:
   - 调用时机：当 Channel 已经解除绑定并不再接受连接时。
   - 场景：在服务器端停止监听端口时。

8. **channelClosed**:
   - 调用时机：当 Channel 关闭时。
   - 场景：在连接被关闭时触发。

这些方法提供了处理不同阶段事件的机会，开发者可以根据具体的需求在这些方法中编写相应的处理逻辑。在你提供的 `SLBFilteringHandler` 类中，主要是通过这些方法对 SLB 健康检查请求进行了过滤。