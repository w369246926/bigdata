您提出了一个非常实际的问题。在复杂的集群环境中，确实可能存在大量服务和端口，这使得防火墙配置变得复杂。让我为您提供一些建议和解决方案：

1. 端口扫描和服务审计：
   - 使用工具如 nmap 扫描集群中的所有主机，识别开放的端口：
     ```
     nmap -sS -O 192.168.1.0/24
     ```
   - 审查每个服务的配置文件，找出它们使用的端口。

2. 临时开放所有端口：
   - 在初始设置阶段，您可以临时允许所有流量：
     ```
     firewall-cmd --set-default-zone=trusted
     ```
   - 注意：这只是临时措施，不要在生产环境长期使用。

3. 逐步收紧规则：
   - 开始时允许所有流量，然后逐步添加限制。
   - 使用 `firewall-cmd --add-port=<port>/tcp` 添加已知需要的端口。

4. 使用服务而非端口号：
   - 对于常见服务，使用预定义的服务名而不是端口号：
     ```
     firewall-cmd --permanent --add-service=http
     firewall-cmd --permanent --add-service=https
     ```

5. 创建自定义服务：
   - 对于特定应用，创建自定义服务定义：
     ```
     firewall-cmd --permanent --new-service=myapp
     firewall-cmd --permanent --service=myapp --add-port=7000-7005/tcp
     ```

6. 使用富规则：
   - 对于复杂的规则，使用富规则允许特定IP或网段访问：
     ```
     firewall-cmd --permanent --add-rich-rule='rule family="ipv4" source address="192.168.1.0/24" accept'
     ```

7. 日志和监控：
   - 启用防火墙日志，监控被阻止的连接：
     ```
     firewall-cmd --set-log-denied=all
     ```
   - 分析日志，找出可能需要开放的端口。

8. 使用配置管理工具：
   - 考虑使用 Ansible、Puppet 或 Chef 等工具来管理防火墙配置，使其更容易维护和复制。

9. 网络分段：
   - 考虑使用VLAN或子网来分隔不同的服务组，减少需要在防火墙上开放的端口。

10. 定期审查：
    - 定期审查防火墙规则，移除不再需要的规则。

记住，安全性和可用性之间需要平衡。起初可能需要更宽松的规则，但随着对系统了解的加深，应逐步收紧这些规则。

您是否需要我详细解释其中的任何步骤，或者有关于特定服务的防火墙配置问题？